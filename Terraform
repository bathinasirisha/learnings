To create VM by using this 
provider "google" {
    project     ="kubernetes-382110"
    credentials =file("kubernetes-382110-506ce1526224.json")
    region      = "us-central1"
    zone        ="us-central1-a"

}

resource "google_compute_instance" "my_instance" {
  name         = "terraform-instance"
  machine_type = "e2-micro"
  zone        ="us-central1-a"
  allow_stopping_for_update = true

 boot_disk {
    initialize_params {
      image = "centos-7-v20230411"
    }
  }


 network_interface {
    network = "default"
    access_config {
    
   }
 }
}
To create VPC subnetworks

network_interface {
    network    = google_compute_network.terraform-network.self_link
    subnetwork = google_compute_subnetwork.terraform-subnet.self_link
    access_config {
    
   }
 }
}
resource "google_compute_network" "terraform-network" {
  name = "terraform-network"
  auto_create_subnetworks = false
  }
  resource "google_compute_subnetwork" "terraform-subnet" {
    name          = "terraform-subnet"
    ip_cidr_range = "10.2.0.0/16"
    region        = "us-central1"
    network       = google_compute_network.terraform-network.id
  }
  to input varibles
  
  terraform plan -var="project=kubernetes-382110" -var="credentials=kubernetes-382110-506ce1526224.json"
  to env variables 
  
  set TF_VAR_credentials=kubernetes-382110-506ce1526224.json
  terraform plan -var="project=kubernetes-382110"
  
  List:collection type
  variable my_list{
  type=list(number)
  description="This is variable which contains string"
  default=[12,"34.5"]
  }
  Tuple: It is a structural type
  for tuple order is important 
  variable my_tuple{
  type=tuple(String,number,bool)
  description="This is a correct tuple"
  default=["Hello",12,true]
    }
    
   Set: collection type
    variable my_set{
  type=tuple(number)
  description="This is a correct tuple"
  default=[11,12,32]
 }
 
 Map and object: MAp=>collection type
 Map and object contains multiple values into single one
 Map contains same type elements
 type map(string)
 ex:
 variable mymap{
 type=map(string)
 description="providers"
 default={
 project="project_name"
 credentials="key.json"
 region="us-central1"
 }
 
 
 object structural type
 contains collection of different types
 
 variable my_object{
  type=object({
  name=string
  machine_type=string
  zone=string
  allow_stopping_for_update=bool
  })
  default={
  name="terraform-instance
  machine_type=e2-micro
  zone="us-central1-1"
  allow_stopping_for_update=true
  }
  validate{
  condition=""
  error_message=""
 }
