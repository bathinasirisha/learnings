#docker pull docker.elastic.co/elasticsearch/elasticsearch:7.9.0              ##pull the image from registry
docker info                                                                  ## gives information about the docker setup on your machine/vm

sudo docker build -t image-name:tag .                   ##to create a docker image
#docker images                                          ##to check docker images
# ##docker rmi imageid                                  ##to remove a docker image
docker run -d imageid                                   ##to create a docker container which is running in background(daemon -d)
#docker ps                                              ##it will show current running containers
#docker ps -a                                           ##it will show stopped containers as well
#docker start containerid                               ##to start a stopped container
##docker stop containerid                                ## to stop a running container
##docker rm containerid                                  ##to delete a container
#docker run --name nginx -d -p 8080:80 nginx             ##to run ngnix webserver on port 8080
#sudo docker run -i -t imageid /bin/bash                 ##to create docker container which is in running state
#docker exec -it containerid /bin/bash/                  ##to enter into docker container from linux machine
#docker rename big_hamilton big_hamilton_v1              ## remane docker containerdocker rename big_hamilton big_hamilton_v1 <-- remane docker container
#docker logs CONTAINER_NAME                              ## get a list of commands executed in the container.
#docker cp containerId:/filename.html ./                 ##to copy from container to localmachine  
#docker cp filename.html containerid:/path/              ##to copy from local to container
docker run --name my-custom-nginx-container -v ~/nginx/nginx.conf:/etc/nginx/nginx.conf -d nginx       ## attaching docker volume to file
#docker compose
docker-compose -f mongo.yaml up -d
docker-compose -f mongo.yaml down

#docker network
docker network ls
docker network create mongo-network

#use network
docker run -d \                             <-- d demen
-p 27017:27017 \                            <-- p vmport:containerport
-e MONGO_INITDB_ROOT_USERNAME=admin \       <-- e environmnet varible
-e MONGO_INITDB_ROOT_PASSWORD=password \
--net mongo-network \                       <-- net network
--name mongodb \                            <-- 
mongo

vi Dockerfile                                                               ##to create a docker file
# This is the base image we will use to create our custom docker image
FROM ubuntu:latest
# the maintainer of an image
LABEL maintainer="name@company.com"
# Install the tools (sudo)
RUN apt-get update && apt-get upgrade -y && apt install sudo tasksel -y
